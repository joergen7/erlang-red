[{"id":"5c8974f17ca70789","type":"tab","label":"[eventhandler] static configuration","disabled":false,"info":"## Eventhandler configured at start up time\n\nAn example of an event handler node that is statically configured at start up time. The event handler node is a implementation of the [`gen_event`](https://www.erlang.org/doc/apps/stdlib/gen_event.html) behaviour of Erlang.\n\nThe alternative is demonstrated in the [dynamic assignment](https://flows.red-erik.org/f/b70a7ce34819e4d5) of event handlers.\n\n## Terminology\n\nThere are event handlers and then *there are* event handlers!\n\nHere there is the main <a class=\"ahl-node-only\" data-ids=\"cb4b8913ee7f29ca\">event handler process</a> and the individual <a class=\"ahl-group-only\" data-ids=\"d1e45b3e9516c449\">event handler modules</a> which handle specific or multiple or all events that the event handler process receives.\n\nIn this description, I won't actively differentiate between the two uses of the term *event handler*.\n\n## Setup\n\nFor this test, the <a class=\"ahl-group-only\" data-ids=\"d1e45b3e9516c449\">event handler modules</a> are defined at initially before anything else is done. Their code is installed into the running BEAM VM and each has their own functionality:\n\n- <a class=\"ahl-node-only\" data-ids=\"227ccae98f5ff27d\">module_remove_after_one_event</a> removes itself after receiving a `remove_event` event. This module demonstrates how event handlers can remove themselves from the event handler process.\n\n- <a class=\"ahl-node-only\" data-ids=\"eb1df6bd453b35fc\">module_remove_after_five_events</a> handles only the `remove_event` event on the fifth occurrence of the event, it removes itself. This module demonstrates the use of state in an event handler.\n\n- <a class=\"ahl-node-only\" data-ids=\"7a74bd6785b52bd3\">module_event_counter</a> handles all events that occur and counts their occurrence. This module demonstrates how an event handler can receive and handle all events that are being generated and being passed to the event handler process.\n\n## Testing\n\nTesting is kicked off by the <a class=\"ahl-node-only\" data-ids=\"3fe9e74e12dd6f76\">inject</a> node triggering the <a class=\"ahl-group-only\" data-ids=\"d04178dfc3aa014c,f089d128515b296d,8581d9afeb193b66\">message generators</a> with each generating two hundred events of a specific event type:\n\n- <a class=\"ahl-group-only\" data-ids=\"f089d128515b296d\">generate remove_event events</a>\n- <a class=\"ahl-group-only\" data-ids=\"8581d9afeb193b66\">generate add_event</a>\n- <a class=\"ahl-group-only\" data-ids=\"d04178dfc3aa014c\">generate update_event</a>\n\nHere events are Erlang-Red messages. Each *event* being generated is actually an Erlang-Red message that is sent to the <a class=\"ahl-node-only\" data-ids=\"cb4b8913ee7f29ca\">Event Handler node</a> that represents the event handler process.\n\nThe <a class=\"ahl-group-only\" data-ids=\"d36f09f4ee2526f8\">testing of functionality</a> simply ensures that all is working as expected. Which, at time of writing, it was!\n","env":[{"name":"ERED_TIMEOUT","type":"num","value":"3"}]},{"id":"d1e45b3e9516c449","type":"group","z":"5c8974f17ca70789","name":"event handler modules","style":{"label":true},"nodes":["7a74bd6785b52bd3","eb1df6bd453b35fc","227ccae98f5ff27d"],"x":96,"y":112,"w":332,"h":209},{"id":"f089d128515b296d","type":"group","z":"5c8974f17ca70789","name":"generate remove_event events","style":{"label":true},"nodes":["996080cff077f0cf","dbaca00fb73e26a8","394d45a5ab8578f8"],"x":605.6666259765625,"y":352.66666889190674,"w":630.3334045410156,"h":160.70833110809326},{"id":"8581d9afeb193b66","type":"group","z":"5c8974f17ca70789","name":"generate add_event","style":{"label":true},"nodes":["376dc2fa1c5c5bea","84815979fd1c9a66","7418129be77cfea5"],"x":751.6666259765625,"y":565,"w":630.3334045410156,"h":159.375},{"id":"d04178dfc3aa014c","type":"group","z":"5c8974f17ca70789","name":"generate update_event","style":{"label":true},"nodes":["7cdddb58d31891dd","b6c596612f5b066f","64c4ba40679e6714"],"x":943.6666259765625,"y":761,"w":630.3334045410156,"h":159.375},{"id":"d36f09f4ee2526f8","type":"group","z":"5c8974f17ca70789","name":"testing of functionality","style":{"label":true},"nodes":["c5266ef626709b64","b2b227833f073e21","7698d15e7e41a2eb","395cf3d3859ea533","f91bc4cc31905121","35cfbf07b0ac97ae","49e011472b36cbb5","b68a9b6a4c05397d","595daaa768d326e7","5f0893ae1c04e4f4","dec174b363500ee5","4787ee3f049d134d","40d2d569af2996bc"],"x":2516.3336601257324,"y":263.99997329711914,"w":1314.9998245239258,"h":435.25003147125244},{"id":"7a74bd6785b52bd3","type":"erlmodule","z":"5c8974f17ca70789","g":"d1e45b3e9516c449","name":"","module_name":"module_event_counter","code":"-module(module_event_counter).\n\n-behaviour(gen_event).\n\n-export([\n    init/1,\n    handle_event/2,\n    handle_call/2,\n    handle_info/2,\n    terminate/2,\n    code_change/3\n]).\n\n-import(ered_nodes, [\n    send_msg_to_connected_nodes/2\n]).\n\ninit(_Args) ->\n    {ok, #{counter => #{}}}.\n\nhandle_event({EventName, Msg, EventHandlerNodeDef}, State) ->\n    State2 = increment_counter_for(EventName, State),\n\n    Msg2 = Msg#{ \n        <<\"count\">> => maps:get(EventName, maps:get(counter, State2)),\n        <<\"handler\">> => module_event_counter\n    },\n\n    send_msg_to_connected_nodes(EventHandlerNodeDef, Msg2),\n\n    {ok, State2};\n\nhandle_event(_Event, State) ->\n    {ok, State}.\n\nhandle_call(_Request, State) ->\n    {ok, ok, State}.\n\nhandle_info(_Info, State) ->\n    {ok, State}.\n\nterminate(Args, _State) ->\n    Args.\n\ncode_change(_OldVsn, State, _Extra) ->\n    {ok, State}.\n\n%%\n%%\nincrement_counter_for(EventName, State) ->\n    Counter = maps:get(counter, State),\n\n    Counter2 = case maps:find(EventName, Counter) of \n        {ok, Val} ->\n            Counter#{ EventName => Val + 1 };\n        _ -> \n            Counter#{ EventName => 1 }\n    end,\n\n    State#{ counter => Counter2 }.","x":222,"y":153,"wires":[]},{"id":"eb1df6bd453b35fc","type":"erlmodule","z":"5c8974f17ca70789","g":"d1e45b3e9516c449","name":"","module_name":"module_remove_after_five_events","code":"-module(module_remove_after_five_events).\n\n-behaviour(gen_event).\n\n-export([\n    init/1,\n    handle_event/2,\n    handle_call/2,\n    handle_info/2,\n    terminate/2,\n    code_change/3\n]).\n\n-import(ered_nodes, [\n    send_msg_to_connected_nodes/2\n]).\n\ninit(Args) ->\n    {ok, #{count => 1}}.\n\nhandle_event({<<\"remove_event\">>, Msg, EventHandlerNodeDef}, State) ->\n    Msg2 = Msg#{ \n        <<\"handled\">> => <<\"remove_event\">>, \n        <<\"count\">> => maps:get(count, State),\n        <<\"handler\">> => module_remove_after_five_events\n    },\n    \n    send_msg_to_connected_nodes(EventHandlerNodeDef, Msg2),\n\n    case maps:get(count, State) of\n        5 ->\n            remove_handler;\n        C ->\n            {ok, State#{ count => C + 1 }}\n    end;\n\nhandle_event(_Event, State) ->\n    {ok, State}.\n\nhandle_call(_Request, State) ->\n    {ok, ok, State}.\n\nhandle_info(_Info, State) ->\n    {ok, State}.\n\nterminate(Args, _State) ->\n    Args.\n\ncode_change(_OldVsn, State, _Extra) ->\n    {ok, State}.\n","x":262,"y":216.5,"wires":[]},{"id":"227ccae98f5ff27d","type":"erlmodule","z":"5c8974f17ca70789","g":"d1e45b3e9516c449","name":"","module_name":"module_remove_after_one_event","code":"-module(module_remove_after_one_event).\n\n-behaviour(gen_event).\n\n-export([\n    init/1,\n    handle_event/2,\n    handle_call/2,\n    handle_info/2,\n    terminate/2,\n    code_change/3\n]).\n\n-import(ered_nodes, [\n    send_msg_to_connected_nodes/2\n]).\n\ninit(Args) ->\n    {ok, Args}.\n\nhandle_event({<<\"remove_event\">>, Msg, EventHandlerNodeDef}, State) ->\n    Msg2 = Msg#{ \n        <<\"handled\">> => <<\"remove_event\">>,\n        <<\"handler\">> => module_remove_after_one_event\n    },\n    send_msg_to_connected_nodes(EventHandlerNodeDef, Msg2),\n    remove_handler;\n\nhandle_event(_Event, State) ->\n    {ok, State}.\n\nhandle_call(_Request, State) ->\n    {ok, ok, State}.\n\nhandle_info(_Info, State) ->\n    {ok, State}.\n\nterminate(Args, _State) ->\n    Args.\n\ncode_change(_OldVsn, State, _Extra) ->\n    {ok, State}.\n","x":252,"y":280,"wires":[]},{"id":"996080cff077f0cf","type":"change","z":"5c8974f17ca70789","g":"f089d128515b296d","name":"","rules":[{"p":"event","pt":"msg","t":"set","to":"remove_event","tot":"str"},{"p":"msgcnt","pt":"msg","t":"set","to":"$$.msgcnt + 1","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":968,"y":393.66666889190674,"wires":[["dbaca00fb73e26a8","cb4b8913ee7f29ca"]]},{"id":"dbaca00fb73e26a8","type":"delay","z":"5c8974f17ca70789","g":"f089d128515b296d","name":"","pauseType":"random","timeout":"1","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"milliseconds","drop":false,"allowrate":false,"outputs":1,"x":1150.0000305175781,"y":469.375,"wires":[["394d45a5ab8578f8"]]},{"id":"394d45a5ab8578f8","type":"switch","z":"5c8974f17ca70789","g":"f089d128515b296d","name":"stop after 200 messages","property":"msgcnt","propertyType":"msg","rules":[{"t":"lt","v":"200","vt":"num"}],"checkall":"true","repair":false,"outputs":1,"x":741.6666259765625,"y":472.375,"wires":[["996080cff077f0cf"]]},{"id":"cb4b8913ee7f29ca","type":"erleventhandler","z":"5c8974f17ca70789","name":"","handlers":[{"nodeid":"eb1df6bd453b35fc","moduleterm":""},{"nodeid":"7a74bd6785b52bd3","moduleterm":""},{"nodeid":"227ccae98f5ff27d","moduleterm":""}],"x":2000,"y":393.66666889190674,"wires":[["409e0068c0136615"]]},{"id":"409e0068c0136615","type":"switch","z":"5c8974f17ca70789","name":"event handler ","property":"$toString($$.handler)","propertyType":"jsonata","rules":[{"t":"eq","v":"module_event_counter","vt":"str"},{"t":"eq","v":"module_remove_after_five_events","vt":"str"},{"t":"eq","v":"module_remove_after_one_event","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":2242.000286102295,"y":393.66666889190674,"wires":[["b68a9b6a4c05397d"],["35cfbf07b0ac97ae","395cf3d3859ea533"],["c5266ef626709b64","7698d15e7e41a2eb"]]},{"id":"c5266ef626709b64","type":"join","z":"5c8974f17ca70789","g":"d36f09f4ee2526f8","name":"","mode":"custom","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":false,"accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2592.3336601257324,"y":658.2500047683716,"wires":[["b2b227833f073e21"]]},{"id":"376dc2fa1c5c5bea","type":"change","z":"5c8974f17ca70789","g":"8581d9afeb193b66","name":"","rules":[{"p":"event","pt":"msg","t":"set","to":"add_event","tot":"str"},{"p":"msgcnt","pt":"msg","t":"set","to":"$$.msgcnt + 1","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1114,"y":606,"wires":[["84815979fd1c9a66","cb4b8913ee7f29ca"]]},{"id":"84815979fd1c9a66","type":"delay","z":"5c8974f17ca70789","g":"8581d9afeb193b66","name":"","pauseType":"random","timeout":"1","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"milliseconds","drop":false,"allowrate":false,"outputs":1,"x":1296.0000305175781,"y":680.375,"wires":[["7418129be77cfea5"]]},{"id":"7418129be77cfea5","type":"switch","z":"5c8974f17ca70789","g":"8581d9afeb193b66","name":"stop after 200 messages","property":"msgcnt","propertyType":"msg","rules":[{"t":"lt","v":"200","vt":"num"}],"checkall":"true","repair":false,"outputs":1,"x":887.6666259765625,"y":683.375,"wires":[["376dc2fa1c5c5bea"]]},{"id":"7cdddb58d31891dd","type":"change","z":"5c8974f17ca70789","g":"d04178dfc3aa014c","name":"","rules":[{"p":"event","pt":"msg","t":"set","to":"update_event","tot":"str"},{"p":"msgcnt","pt":"msg","t":"set","to":"$$.msgcnt + 1","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1306,"y":802,"wires":[["b6c596612f5b066f","cb4b8913ee7f29ca"]]},{"id":"b6c596612f5b066f","type":"delay","z":"5c8974f17ca70789","g":"d04178dfc3aa014c","name":"","pauseType":"random","timeout":"1","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"milliseconds","drop":false,"allowrate":false,"outputs":1,"x":1488.0000305175781,"y":876.375,"wires":[["64c4ba40679e6714"]]},{"id":"64c4ba40679e6714","type":"switch","z":"5c8974f17ca70789","g":"d04178dfc3aa014c","name":"stop after 200 messages","property":"msgcnt","propertyType":"msg","rules":[{"t":"lt","v":"200","vt":"num"}],"checkall":"true","repair":false,"outputs":1,"x":1079.6666259765625,"y":879.375,"wires":[["7cdddb58d31891dd"]]},{"id":"3fe9e74e12dd6f76","type":"inject","z":"5c8974f17ca70789","name":"","props":[{"p":"payload"},{"p":"msgcnt","v":"0","vt":"num"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":211,"y":801,"wires":[["996080cff077f0cf","376dc2fa1c5c5bea","7cdddb58d31891dd"]]},{"id":"b2b227833f073e21","type":"ut-assert-failure","z":"5c8974f17ca70789","g":"d36f09f4ee2526f8","name":"","x":2865.6668586730957,"y":658.2500047683716,"wires":[]},{"id":"7698d15e7e41a2eb","type":"ut-assert-success","z":"5c8974f17ca70789","g":"d36f09f4ee2526f8","name":"","x":2612.3336601257324,"y":600.5000047683716,"wires":[]},{"id":"395cf3d3859ea533","type":"join","z":"5c8974f17ca70789","g":"d36f09f4ee2526f8","name":"","mode":"custom","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":false,"accumulate":false,"timeout":"","count":"6","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2592.3336601257324,"y":519.3333120346069,"wires":[["f91bc4cc31905121"]]},{"id":"f91bc4cc31905121","type":"ut-assert-failure","z":"5c8974f17ca70789","g":"d36f09f4ee2526f8","name":"","x":2863.667064666748,"y":519.3333120346069,"wires":[]},{"id":"35cfbf07b0ac97ae","type":"ut-assert-success","z":"5c8974f17ca70789","g":"d36f09f4ee2526f8","name":"","x":2612.3336601257324,"y":460.58331203460693,"wires":[]},{"id":"49e011472b36cbb5","type":"switch","z":"5c8974f17ca70789","g":"d36f09f4ee2526f8","name":"event type","property":"event","propertyType":"msg","rules":[{"t":"eq","v":"remove_event","vt":"str"},{"t":"eq","v":"add_event","vt":"str"},{"t":"eq","v":"update_event","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":2867.333484649658,"y":380.49997329711914,"wires":[["595daaa768d326e7","4787ee3f049d134d"],["5f0893ae1c04e4f4","4787ee3f049d134d"],["dec174b363500ee5","4787ee3f049d134d"]]},{"id":"b68a9b6a4c05397d","type":"switch","z":"5c8974f17ca70789","g":"d36f09f4ee2526f8","name":"count == 200","property":"count","propertyType":"msg","rules":[{"t":"eq","v":"200","vt":"num"}],"checkall":"true","repair":false,"outputs":1,"x":2612.3336601257324,"y":380.49997329711914,"wires":[["49e011472b36cbb5"]]},{"id":"595daaa768d326e7","type":"ut-assert-success","z":"5c8974f17ca70789","g":"d36f09f4ee2526f8","name":"","x":3177.333484649658,"y":304.99997329711914,"wires":[]},{"id":"5f0893ae1c04e4f4","type":"ut-assert-success","z":"5c8974f17ca70789","g":"d36f09f4ee2526f8","name":"","x":3735.333484649658,"y":380.49997329711914,"wires":[]},{"id":"dec174b363500ee5","type":"ut-assert-success","z":"5c8974f17ca70789","g":"d36f09f4ee2526f8","name":"","x":3177.333484649658,"y":460.99997329711914,"wires":[]},{"id":"4787ee3f049d134d","type":"join","z":"5c8974f17ca70789","g":"d36f09f4ee2526f8","name":"","mode":"custom","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":false,"accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3362.333484649658,"y":380.49997329711914,"wires":[["40d2d569af2996bc"]]},{"id":"40d2d569af2996bc","type":"ut-assert-failure","z":"5c8974f17ca70789","g":"d36f09f4ee2526f8","name":"","x":3538.333484649658,"y":380.49997329711914,"wires":[]}]
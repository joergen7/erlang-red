[{"id":"dd3a287f4b66745a","type":"tab","label":"[statemachine] exception if no action to perform","disabled":false,"info":"## Statemachines need actions\n\nIt is an error if a message is sent to an statemachine and no action is defined.\n\nThe statemachine node raises an exception that can be captured or is sent to the debug panel if not captured.","env":[]},{"id":"219c4860668ffeb6","type":"group","z":"dd3a287f4b66745a","name":"no action and no payload","style":{"label":true},"nodes":["ff00e922e9c9859f","7fe03593dc9b5036","6fc1ce91f7c49594"],"x":270,"y":405,"w":837,"h":161},{"id":"4f6089aa3d5f7229","type":"group","z":"dd3a287f4b66745a","name":"no action but payload","style":{"label":true},"nodes":["cdb9ecf983a7b981","6549d77fda872346","0a354df5f0421672"],"x":260,"y":616,"w":837,"h":161},{"id":"ae18f60d92cbeab2","type":"group","z":"dd3a287f4b66745a","name":"no action and no payload","style":{"label":true},"nodes":["fc49f96f7443c0f7","1a0642cf66c03f8b","b6ad34c8434e67a5","39534782b5a0ab5f","036fe945e28fa95f"],"x":228,"y":805,"w":963,"h":173},{"id":"20bff1405f3419d3","type":"group","z":"dd3a287f4b66745a","name":"no action but payload","style":{"label":true},"nodes":["c3f6efe5c2c48cc8","a41f398cd9535ad6","a2887f9cf9f46bc7","c4d12f45eee64463","63d8c6199839dccf"],"x":218,"y":1006,"w":989,"h":183},{"id":"44281387f23671f5","type":"erlmodule","z":"dd3a287f4b66745a","name":"","module_name":"statemachine_message_no_action","code":"-module(statemachine_message_no_action).\n\n-behaviour(gen_statem).\n\n-export([\n    start/0,\n    init/1,\n    callback_mode/0,\n    handle_event/4,\n    code_change/4,\n    terminate/3,\n    stop/0\n]).\n\ncallback_mode() -> handle_event_function.\n\n%% API.  This example uses a registered name name()\n%% and does not link to the caller.\nstart() ->\n    gen_statem:start({local, ?MODULE}, ?MODULE, [], []).\n\ninit([]) ->\n    State = disconnected,\n    Data = 0,\n    {ok, State, Data}.\n\n%% Mandatory callback functions\nstop() ->\n    gen_statem:stop(?MODULE).\nterminate(_Reason, _State, _Data) ->\n    void.\ncode_change(_Vsn, State, Data, _Extra) ->\n    {ok,State,Data}.\n\n%%\n%% handler function for state transistions\n%%\n\n%%\n%% Do not much. Increment counter and return the value on each call.\n%%\nhandle_event(\n  {call, From},\n  {<<\"donothing\">>, <<\"donothing\">>},\n  disconnected,\n  Data\n) ->\n    {keep_state, \n        Data+1, \n            [{reply, \n              From, \n              list_to_binary(io_lib:format(\"count ~p\", [Data+1]))\n              }\n            ]}.\n\n","x":392,"y":233,"wires":[]},{"id":"ff00e922e9c9859f","type":"erlstatemachine","z":"dd3a287f4b66745a","g":"219c4860668ffeb6","name":"","scope":["44281387f23671f5"],"emit_on_state_change":false,"x":720,"y":446,"wires":[[]]},{"id":"7fe03593dc9b5036","type":"inject","z":"dd3a287f4b66745a","g":"219c4860668ffeb6","name":"","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":366,"y":513,"wires":[["ff00e922e9c9859f"]]},{"id":"6fc1ce91f7c49594","type":"ut-assert-debug","z":"dd3a287f4b66745a","g":"219c4860668ffeb6","name":"","nodeid":"ff00e922e9c9859f","msgtype":"error","inverse":false,"x":851,"y":525,"wires":[]},{"id":"cdb9ecf983a7b981","type":"erlstatemachine","z":"dd3a287f4b66745a","g":"4f6089aa3d5f7229","name":"","scope":["44281387f23671f5"],"emit_on_state_change":false,"x":710,"y":657,"wires":[[]]},{"id":"6549d77fda872346","type":"inject","z":"dd3a287f4b66745a","g":"4f6089aa3d5f7229","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"fubar","payloadType":"str","x":356,"y":724,"wires":[["cdb9ecf983a7b981"]]},{"id":"0a354df5f0421672","type":"ut-assert-debug","z":"dd3a287f4b66745a","g":"4f6089aa3d5f7229","name":"","nodeid":"cdb9ecf983a7b981","msgtype":"error","inverse":false,"x":841,"y":736,"wires":[]},{"id":"39534782b5a0ab5f","type":"catch","z":"dd3a287f4b66745a","g":"ae18f60d92cbeab2","name":"","scope":["fc49f96f7443c0f7"],"uncaught":false,"x":901,"y":847,"wires":[["036fe945e28fa95f"]]},{"id":"fc49f96f7443c0f7","type":"erlstatemachine","z":"dd3a287f4b66745a","g":"ae18f60d92cbeab2","name":"","scope":["44281387f23671f5"],"emit_on_state_change":false,"x":678,"y":858,"wires":[[]]},{"id":"1a0642cf66c03f8b","type":"inject","z":"dd3a287f4b66745a","g":"ae18f60d92cbeab2","name":"","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":324,"y":925,"wires":[["fc49f96f7443c0f7"]]},{"id":"b6ad34c8434e67a5","type":"ut-assert-debug","z":"dd3a287f4b66745a","g":"ae18f60d92cbeab2","name":"","nodeid":"fc49f96f7443c0f7","msgtype":"error","inverse":true,"x":789,"y":937,"wires":[]},{"id":"c3f6efe5c2c48cc8","type":"erlstatemachine","z":"dd3a287f4b66745a","g":"20bff1405f3419d3","name":"","scope":["44281387f23671f5"],"emit_on_state_change":false,"x":668,"y":1069,"wires":[[]]},{"id":"a41f398cd9535ad6","type":"inject","z":"dd3a287f4b66745a","g":"20bff1405f3419d3","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"fubar","payloadType":"str","x":314,"y":1136,"wires":[["c3f6efe5c2c48cc8"]]},{"id":"a2887f9cf9f46bc7","type":"ut-assert-debug","z":"dd3a287f4b66745a","g":"20bff1405f3419d3","name":"","nodeid":"c3f6efe5c2c48cc8","msgtype":"error","inverse":true,"x":779,"y":1148,"wires":[]},{"id":"c4d12f45eee64463","type":"catch","z":"dd3a287f4b66745a","g":"20bff1405f3419d3","name":"","scope":["c3f6efe5c2c48cc8"],"uncaught":false,"x":896,"y":1047,"wires":[["63d8c6199839dccf"]]},{"id":"63d8c6199839dccf","type":"ut-assert-success","z":"dd3a287f4b66745a","g":"20bff1405f3419d3","name":"","x":1111,"y":1047,"wires":[]},{"id":"036fe945e28fa95f","type":"ut-assert-success","z":"dd3a287f4b66745a","g":"ae18f60d92cbeab2","name":"","x":1095,"y":846,"wires":[]}]